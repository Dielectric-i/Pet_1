# docker-compose.yml
name: pet

x-logger: &fluentd-driver
  driver: fluentd
  options:
    fluentd-address: "127.0.0.1:24224"
    fluentd-async: "true"
    labels: "com.docker.compose.project,com.docker.compose.service"
    tag: 'svc.{{.Name}}'
services:

  ############################
  #      Fluent-bit          #
  ############################
  fluent-bit:
    image: cr.fluentbit.io/fluent/fluent-bit:latest
    # container_name: fluent-bit
    volumes:
      - ./fluent-bit:/fluent-bit/etc:ro,Z
    command:
      -c /fluent-bit/etc/fluent-bit.yml
    logging: *fluentd-driver
    networks:
      - petnet
    ports:
      - "24224:24224/tcp"
  
  ############################
  #          Loki            #
  ############################
  loki:
    image: grafana/loki:latest
    volumes:
      - ./loki/:/etc/loki/:ro,Z
    command:
      - -config.file=/etc/loki/loki-config.yaml
    logging: *fluentd-driver
    networks:
      - petnet
    ports:
      - 3100:3100

  ############################
  #       Grafana            #
  ############################
  grafana:
    env_file: .env
    image: grafana/grafana:latest
    logging: *fluentd-driver
    networks:
      - petnet
    # ports:
    #   - "3001:3000"
    depends_on:
      - loki
    volumes:
      - grafana-data:/var/lib/grafana:Z
      - ./grafana/dashboards:/var/lib/grafana/dashboards:Z            # сами JSON‑дашборды
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro,Z
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro,Z
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro,Z    # провайдеры дашбордов

  ############################
  #  Database (PostgreSQL)   #
  ############################
  db:
    env_file: .env
    image: postgres:16-alpine
    logging: *fluentd-driver
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - petnet
    ports:
      - 5432:5432
    healthcheck:
      test: 
        - "CMD-SHELL"
        - "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
  
  ############################
  #    Backend (.NET 9)      #
  ############################
  backend:
    env_file: .env
    image: dielectrici/pet1-backend:latest
    build:
      context: ./backend
    logging: *fluentd-driver
    networks:
      - petnet
    ports:
      - 5000:5000
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:5000/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  ############################
  #  Frontend (React + TS)   #
  ############################
  frontend:
    image: dielectrici/pet1-frontend:latest
    build:
      context: ./frontend
    logging: *fluentd-driver
    networks: [ petnet ]
    ports: [ 3000:80 ]              # host:container
    depends_on:
      backend:
        condition: service_healthy

networks:
  petnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24
          gateway: 172.30.0.1
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "false"

volumes:
  db-data:
  grafana-data:
