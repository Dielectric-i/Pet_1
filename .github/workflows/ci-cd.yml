name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      CONNECTIONSTRINGS__DEFAULT: ${{ secrets.PG_CONN }}
      JWT__KEY: ${{ secrets.JWT_KEY }}
      JWT__ISSUER: ${{ secrets.JWT_ISSUER }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      
    steps:
      # 1. Клонируем репозиторий на машину GitHub Actions.
      - name: Checkout code
        uses: actions/checkout@v4

      # 2 Логинимся в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Собираем и пушим образ для бэкенда.
      - name: Build and push backend
        run: |
          docker build \
            --tag ${{ secrets.DOCKER_USERNAME }}/pet1-backend:latest \
            -f backend/Dockerfile backend
          docker push ${{ secrets.DOCKER_USERNAME }}/pet1-backend:latest


      # 4. Собираем и пушим образ для фронтенда.
      - name: Build and push frontend
        run: |
          docker build \
            --tag ${{ secrets.DOCKER_USERNAME }}/pet1-frontend:latest \
            -f frontend/Dockerfile frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/pet1-frontend:latest

      # 5. Деплоим на домашний сервер через SSH.
      - name: Deploy to MyServer
        uses: appleboy/ssh-action@v1.2.0
        with:
          envs: POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB,CONNECTIONSTRINGS__DEFAULT,JWT__KEY
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USERNAME }}
          key: ${{ secrets.VPS_SSH_SECRET }}
          port: ${{ secrets.VPS_SSH_PORT }}
          # Добавить JWT_Issuer = PetApi
          # JWT__KEY 2 подчеркивания лишние?
          # 
          script: |
            set -exuo pipefail

            cat >~/Repo/Pet_1/.env <<EOF
            POSTGRES_USER=${POSTGRES_USER}
            POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            POSTGRES_DB=${POSTGRES_DB}
            CONNECTIONSTRINGS__DEFAULT="${CONNECTIONSTRINGS__DEFAULT}"
            JWT__KEY="${JWT__KEY}"
            JWT__ISSUER="${JWT__ISSUER}"
            EOF

            cd ~/Repo/Pet_1

            docker compose down -v  || { echo "(docker compose down failed)"; exit 1; }

            git pull || { echo "(git pull failed)"; exit 1; }

            docker compose pull

            docker compose up -d --wait
          